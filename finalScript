

#include <iostream>
#include <string>
#include <ctime>
#include <cstdlib>
#include <fstream>
using namespace std;


void Validate_ID();
int Unique_Question(int);
bool finalScreen(int, int, int, string, string);
string firstName, lastName;


int main()
{
	//ensuring randomness
	srand(time(0));
	bool restart = true;
	int numQuestions;


	//everything in a do while loop so we can restart
	do
	{
		//clearing screen
		system("CLS");


		//get how many questions you want to do
		cout << "Do you want to take the 10 Question quiz or the 20 Question Quiz? " << endl;
		cin >> numQuestions;
		if (numQuestions == 10 || numQuestions == 20) {


			//get initial time
			int startTime = time(0);


			//run user identification function
			Validate_ID();


			//ask questions and get total score
			int score = Unique_Question(numQuestions);


			//print final screen and potentially restart
			restart = finalScreen(score, time(0) - startTime, numQuestions, ::firstName, ::lastName);
		}


		system("PAUSE");
	} while (restart);


	return 0;
}


//Getting user to input their personal information such as name and student ID
void Validate_ID()
{

	//declaring variables
	static string ID;
	bool inputDone = false;


	//getting user
	for (int g = 1; !(inputDone); g++)
	{
		inputDone = true;


		//getting name and ID
		cout << "Please enter Firstname, Lastname and ID" << endl;
		cin >> ::firstName >> ::lastName >> ID;


		//checks for last 5 as numbers and if ID is 6 characters
		for (int i = 1; i < 6; i++)
		{
			if (ID.length() != 6)
			{
				inputDone = false;
			}
			else if (!(ID[i] - 48 <= 9 && ID[i] >= 1))
			{
				inputDone = false;
			}
		}


		//checking if first character is 'A'
		if (ID[0] != 'A')
		{
			inputDone = false;
		}


		if (g >= 3)
		{
			cout << "You failed to enter correct information" << endl;
			system("PAUSE");
			exit(0);
		}
	}
	
	
	cout << endl;
}


//asking quesions and checking answers
int Unique_Question(int numQuestions)
{
	//declaring variables
	string questions[100];
	string answers[100];
	ifstream myFile;
	ofstream wrongNum;
	int askedQuestions[20];
	string input;
	bool done = false;
	int score = 0;


	//opening questions file
	myFile.open("questions.txt");
	for (int i = 0; i < 100; i++)
	{
		getline(myFile, questions[i]);
	}
	myFile.close();


	//opening answers file
	myFile.open("answers.txt");
	for (int i = 0; i < 100; i++)
	{
		getline(myFile, answers[i]);
	}
	myFile.close();


	//opening file recording missed questions
	wrongNum.open("Wrong Numbers.txt");


	//Asking questions
	for (int i = 0; i < numQuestions; i++)
	{
		bool finished;
		bool noRe;
		int rando;

		
		//check if question has 
		do {
			noRe = true;
			rando = rand() % 100;
			for (int h = 0; h < numQuestions; h++)
			{
				if (rando == askedQuestions[h])
					noRe = false;
			}
		} while (!noRe);

		
		//adding question id to asked question array
		askedQuestions[i] = rando;


		do {
			//outputting question
			cout << questions[rando] << endl;
			finished = false;
			cin >> input;
			cout << endl;


			//checking the input
			if (input == "True" || input == "true" || input == "T" || input == "t")
			{
				//checking if correct input
				if (answers[rando] == "TRUE")
				{
					score++;
				}
				else
				{
					wrongNum << rando << endl;
				}
				finished = true;
			}
			else if (input == "False" || input == "false" || input == "F" || input == "f")
			{
				//checking if correct input
				if (answers[rando] == "FALSE")
				{
					score++;
				}
				else
				{
					wrongNum << rando << endl;
				}
				finished = true;
			}
			else
			{
				cout << "Please enter a valid response" << endl;
			}
		} while (!(finished));
	}


	//closing missed question file
	wrongNum.close();
	cout << endl;
	return score;
}


bool finalScreen(int testScore, int testTime, int numQuestions, string fName, string lName)
{
	char choice;
	ifstream myFile;
	string questions[100];
	string answers[100];
	int wrongQuestions[20];
	bool restart;

	{
		//opening questions file
		myFile.open("questions.txt");
		for (int i = 0; i < 100; i++)
			getline(myFile, questions[i]);
		myFile.close();

		//opening answers file
		myFile.open("answers.txt");
		for (int i = 0; i < 100; i++)
			getline(myFile, answers[i]);
		myFile.close();

		//opening file containing missed questions
		myFile.open("Wrong Numbers.txt");
		for (int i = 0; i < numQuestions; i++)
			myFile >> wrongQuestions[i];
		myFile.close();
	}

	cout << "Student: " << fName << " " << lName  << endl;

	(numQuestions == 10) ? (cout << "Score: " << testScore << " / 10" << endl) : (cout << "Score: " << testScore / 2.0 << " / 10" << endl);

	cout << "Time Elapsed: " << testTime << " seconds\n" << endl;

	for (int i = 0; i < (numQuestions - testScore); i++)
	{
		//Outputting wrong questions and the correct errors
		cout << "Question Archived number " << i + 1 << ": " << questions[wrongQuestions[i]] << endl;
		cout << "You said: ";
		((answers[wrongQuestions[i]] == "TRUE") ? (cout << "False\n") : (cout << "True\n"));

		cout << "While the correct answer was: ";
		((answers[wrongQuestions[i]] == "TRUE") ? (cout << "True\n\n") : (cout << "False\n\n"));
	}

	bool notValid;
	do
	{
		notValid = false;

		cout << "Please enter 's' to restart or 'q' to quit" << endl;
		cin >> choice;

		if (choice == 'q')
		{
			restart = false;
		}
		else if (choice == 's')
		{
			restart = true;
		}
		else
		{
			cout << "Please input a valid response (q to quit or r to Restart)\n" << endl;
			notValid = true;
		}
	} while (notValid);
	return restart;
}
